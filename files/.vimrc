call pathogen#infect()

syntax on
set background=dark
colorscheme solarized
filetype plugin indent on

" <leader> key:
let mapleader = ","

set autoindent

set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

set showtabline=2
" show tabs and spaces
" set list
set pastetoggle=<F5>

" relativenumber changes Vim‚Äôs line number column to display how far away each
" line is from the current one, instead of showing the absolute line number.
"
" I almost never care what numeric line I‚Äôm on in a file (and if I do I can
" see it in the status line), so I don‚Äôt miss the normal line numbers. I do
" care how far away a particular line might be, because it tells me what
" number I need to use with motion commands like d<NUMBER>d.
set relativenumber

" undofile tells Vim to create <FILENAME>.un~ files whenever you edit a file.
" These files contain undo information so you can undo previous actions even
" after you close and reopen a file.
set undofile

" set nocompatible gets rid of all the crap that Vim does to be vi compatible.
" It‚Äôs 2010 ‚Äî we don‚Äôt need to be compatible with vi at the expense of
" functionality any more.
set nocompatible

" ignorecase and smartcase together make Vim deal with case-sensitive search
" intelligently. If you search for an all-lowercase string your search will be
" case-insensitive, but if one or more characters is uppercase the search will
" be case-sensitive. Most of the time this does what you want.
set ignorecase
set smartcase

nnoremap <leader><space> :noh<cr>

" New Vim users will want the following lines to teach them to do things
" right.
" This will disable the arrow keys while you‚Äôre in normal mode to help you
" learn to use hjkl. Trust me, you want to learn to use hjkl. Playing a lot of
" Nethack also helps.
"
" It also disables the arrow keys in insert mode to force you to get back into
" normal mode the instant you‚Äôre done inserting text, which is the ‚Äúright way‚Äù
" to do things.
"
" It also makes j and k work the way you expect instead of working in some
" archaic ‚Äúmovement by file line instead of screen line‚Äù fashion.
"nnoremap <up> <nop>
"nnoremap <down> <nop>
"nnoremap <left> <nop>
"nnoremap <right> <nop>
"inoremap <up> <nop>
"inoremap <down> <nop>
"inoremap <left> <nop>
"inoremap <right> <nop>

" –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–æ–≤ –ø–æ Ctrl+PageDown (—Å–ª–µ–¥—É—é—â–∞—è) –∏ Ctrl+PageUp (–ø—Ä–µ–¥—ã–¥—É—â–∞—è)
if &term =~ "screen"
  imap [5;5~ <ESC>gTi
  imap [6;5~ <ESC>gti
  nmap [5;5~ gt
  nmap [6;5~ gT
endif

if &term =~ "xterm"
  imap <C-PageUp> <ESC>gTi
  imap <C-PageDown> <ESC>gti
  nmap <C-PageUp> gt
  nmap <C-PageDown> gT
endif
"map <C-1> 1gt
"map <C-2> 2gt
"map <C-3> 3gt

" NERDTree hotkeys
nmap <F3> :NERDTreeToggle<CR>
vmap <F3> <ESC>:NERDTreeToggle<CR>i
imap <F3> <ESC>:NERDTreeToggle<CR>i

autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

"I also like to make ; do the same thing as : ‚Äî it‚Äôs one less key to hit every
"time I want to save a file:
nnoremap ; :

" retab whole file
map <F7> mzgg=G`z<CR>

map —ë `
map –π q
map —Ü w
map —É e
map –∫ r
map –µ t
map –Ω y
map –≥ u
map —à i
map —â o
map –∑ p
map —Ö [
map —ä ]
map —Ñ a
map —ã s
map –≤ d
map –∞ f
map –ø g
map —Ä h
map –æ j
map –ª k
map –¥ l
map –∂ ;
map —ç '
map —è z
map —á x
map —Å c
map –º v
map –∏ b
map —Ç n
map —å m
map –± ,
map —é .
map –Å ~
map –ô Q
map –¶ W
map –£ E
map –ö R
map –ï T
map –ù Y
map –ì U
map –® I
map –© O
map –ó P
map –• {
map –™ }
map –§ A
map –´ S
map –í D
map –ê F
map –ü G
map –† H
map –û J
map –õ K
map –î L
map –ñ :
map –≠ "
map –Ø Z
map –ß X
map –° C
map –ú V
map –ò B
map –¢ N
map –¨ M
map –ë <
map –Æ >

au BufRead,BufNewFile *.as set filetype=actionscript

ca tn tabnew
ca th tabp
ca tl tabn

" remove trailing whitespaces before saving
autocmd BufWritePre *.rb,*.erb :%s/\s\+$//e
